buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

// tag::xsd[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/studentDetailsWsdl.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema ,encoding:"UTF-8") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 11, target: 11, debug: true,encoding:"UTF-8",
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::xsd[]

task afterEclipseImport {
    dependsOn "genJaxb"
}

// tag::jaxb[]
configurations {
    jaxb
}

bootJar {
    baseName = 'gs-producing-web-service'
    version =  '0.1.0'
    //from genJaxb.classesDir
}

// tag::dependencies[]
sourceCompatibility = '11'
targetCompatibility = '11'

dependencies {
	compile group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.5.1'
    compile 'org.springframework.boot:spring-boot-starter-web-services'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    compile 'wsdl4j:wsdl4j:1.6.1'
    jaxb 'org.glassfish.jaxb:jaxb-xjc:2.2.11'
    compile 'javax.xml.bind:jaxb-api:2.3.1'
	compile 'javax.activation:javax.activation-api:1.2.0'
	compile 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	
    //compile(files(genJaxb.classesDir).builtBy(genJaxb))
}
// end::dependencies[]
// end::jaxb[]